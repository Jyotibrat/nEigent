{
  "name": "My workflow 4",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -368,
        416
      ],
      "id": "e9254217-e772-4004-a28b-4ce40f5ffb74",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain",
              "drawingsToFormat": "application/pdf",
              "slidesToFormat": "application/pdf"
            }
          }
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -48,
        256
      ],
      "id": "218efd39-b8d1-420d-9e41-7cafbb044bf6",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "document",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "text": "Is there any API Key in this document?",
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        176,
        256
      ],
      "id": "aba208a7-69a2-468a-beff-5f0877936c6d",
      "name": "Analyze document",
      "credentials": {
        "googlePalmApi": {
          "id": "",
          "name": "Google Gemini(PaLM) Api account 3"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "bjyotibrat@gmail.com",
        "subject": "FOR TESTING",
        "message": "={{ $json.content.parts[0].text }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        400,
        256
      ],
      "id": "4e7e35a1-a865-46db-bb2f-1dfd3f456833",
      "name": "Send a message",
      "webhookId": "acf1eb41-4876-4f3e-a14f-22eb22e3c8a6",
      "credentials": {
        "gmailOAuth2": {
          "id": "",
          "name": "Gmail account 3"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const allow = /\\.(txt|md|js|ts|py|java|go|rb|json|yaml|yml|tf|sh|env|ini|cfg|properties|ipynb)$/i;\nconst maxBytes = 1_000_000;\nconst out = [];\n($json.tree || []).forEach(n => {\n  if (n.type === 'blob' && allow.test(n.path) && (n.size ?? 0) <= maxBytes) {\n    out.push({ json: { owner: $json.owner, repo: $json.repo, branch: $json.branch, path: n.path } });\n  }\n});\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        400,
        544
      ],
      "id": "dc005d15-5ad5-4287-b8a4-3d41318205c3",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"owner\": \"Jyotibrat\",\n  \"repo\": \"For-Testing\",\n  \"branch\": \"main\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -48,
        544
      ],
      "id": "8311e045-2f6b-4201-a28d-c302e59a3a51",
      "name": "GitHub Credentials 1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e583b709-0163-4573-ad1d-3be494ec256c",
              "name": "owner",
              "value": "Jyotibrat",
              "type": "string"
            },
            {
              "id": "051f857a-32d2-4d47-b871-6b7be6638893",
              "name": "repo",
              "value": "For-Testing",
              "type": "string"
            },
            {
              "id": "654244f1-32a4-48f3-9a27-1ddfa85110e7",
              "name": "branch",
              "value": "main",
              "type": "string"
            },
            {
              "id": "b0b34a02-41a6-4253-91f8-1b66d2d3b428",
              "name": "path",
              "value": "={{ $json.path }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        608,
        544
      ],
      "id": "769203ff-89cc-416c-aa7e-2bb14c60b879",
      "name": "GitHub Credentials 2"
    },
    {
      "parameters": {
        "url": "=https://api.github.com/repos/{{$json.owner}}/{{$json.repo}}/git/trees/{{$json.branch}}?recursive=1\n",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer "
            },
            {
              "name": "Accept",
              "value": "application/vnd.github+json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        176,
        544
      ],
      "id": "362fd45d-9575-4966-bf85-eab6743ce0af",
      "name": "GitHub API Call 1",
      "credentials": {
        "githubApi": {
          "id": "",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.github.com/repos/{{ $json.owner }}/{{ $json.repo }}/contents/{{ $json.path }}?ref={{ $json.branch }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer "
            },
            {
              "name": "Accept",
              "value": "application/vnd.github+json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        800,
        544
      ],
      "id": "926d57ef-5140-42de-bdfd-b5bd5e16cd51",
      "name": "GitHub API Call 2"
    },
    {
      "parameters": {
        "jsCode": "const b64 = $json.content || \"\";\nconst buf = Buffer.from(b64, \"base64\");\nconst text = buf.toString(\"utf8\");\n// Skip clearly binary files\nif (/[\\u0000-\\u0008\\u000B\\u000C\\u000E-\\u001F]/.test(text)) {\n  return [{ json: { path: $json.path, textContent: \"\", skipped: true } }];\n}\nreturn [{ json: { path: $json.path, textContent: text } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        992,
        544
      ],
      "id": "a3697303-c7c8-475a-9e95-5bc1f4ac048c",
      "name": "Code in JavaScript1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent?key=AIzaSyCppadu4Z_UgZ2ru1aY48nSBZt05_hMOBs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googlePalmApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ \n  {\n    contents: [\n      {\n        role: \"user\",\n        parts: [\n          {\n            text: `Task: Inspect the following file text for leaked API keys/secrets. If any are found, return ONLY a strict JSON array of objects [{\\\"path\\\",\\\"match_type\\\",\\\"match_value\\\",\\\"confidence\\\"}]. If none, return []. Do not include any prose. File path: ${$json.path}. Text:\\n\\n${$json.textContent}`\n          }\n        ]\n      }\n    ],\n    generationConfig: {\n      temperature: 0,\n      maxOutputTokens: 512\n    }\n  }\n}}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1200,
        544
      ],
      "id": "dd5c6c9c-f933-40c6-b007-74563459c337",
      "name": "HTTP Request",
      "credentials": {
        "googlePalmApi": {
          "id": "",
          "name": "Google Gemini(PaLM) Api account 4"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// If HTTP node returns an array at root, unwrap it\nconst root = Array.isArray($json) ? $json[0] : $json;\n\n// Extract model text\nlet txt = root?.candidates?.[0]?.content?.parts?.[0]?.text ?? \"\";\n\n// Remove Markdown code fences if present (``` or ```json ... ```)\ntxt = txt.replace(/^```(?:json)?\\s*/i, \"\").replace(/```$/i, \"\");\n\n// Now parse JSON safely\nlet arr = [];\ntry {\n  arr = JSON.parse(txt);\n} catch (e) {\n  arr = [];\n}\n\n// Emit items\nreturn arr.map(d => ({ json: d }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1408,
        544
      ],
      "id": "ee0bc24b-642d-4069-959c-751fc6191e8f",
      "name": "Code in JavaScript3"
    },
    {
      "parameters": {
        "jsCode": "// items look like: { path, match_type, match_value, confidence }\nconst rows = items.map(i => i.json);\nconst total = rows.length;\n\nconst lines = rows.map((r, i) => {\n  const masked = typeof r.match_value === \"string\" && r.match_value.length > 10\n    ? `${r.match_value.slice(0,4)}••••${r.match_value.slice(-4)}`\n    : String(r.match_value);\n  return `• ${i+1}. ${r.path}: ${r.match_type} = ${masked} (conf=${r.confidence || \"n/a\"})`;\n}).join('\\n');\n\nconst body = `Secrets scan results\\n\\nTotal findings: ${total}\\n\\n${lines}`;\n\nreturn [{ json: { totalFindings: total, body } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1616,
        544
      ],
      "id": "5e91b805-523d-494c-861e-92318518930b",
      "name": "Code in JavaScript2"
    },
    {
      "parameters": {
        "sendTo": "bjyotibrat@gmail.com",
        "subject": "=FOR TESTING GitHub secrets scan ({{ $json.totalFindings }})",
        "emailType": "text",
        "message": "={{ $json.body }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1824,
        544
      ],
      "id": "9d7af28b-9050-471b-aa65-eee64ad1b9f4",
      "name": "Send a message1",
      "webhookId": "a0f22071-cfbd-4137-9aaf-ae268dafc488",
      "credentials": {
        "gmailOAuth2": {
          "id": "",
          "name": "Gmail account 3"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"channelId\": \"1415686187875831903\",\n  \"maxMessages\": \"25\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        0
      ],
      "id": "ec31d2ae-9ccb-4113-86b5-34183ed6f5fb",
      "name": "GitHub Credentials "
    },
    {
      "parameters": {
        "url": "=https://discord.com/api/v10/channels/{{ $json.channelId }}/messages?limit={{ $json.maxMessages }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "discordBotApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bot "
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        208,
        0
      ],
      "id": "e74154ab-5b6c-4346-aa06-ec3cc6e292a5",
      "name": "HTTP Request1",
      "credentials": {
        "discordBotApi": {
          "id": "",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const messages = $input.all().map((item) => item.json);\nconst recentMessage = messages.sort(\n  (a, b) => new Date(b.timestamp) - new Date(a.timestamp),\n)[0];\n\nreturn recentMessage?.attachments?.length ? [recentMessage] : [];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        416,
        0
      ],
      "id": "d8e3bf58-be58-46cc-b8a2-6418d7d47247",
      "name": "Code in JavaScript4",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "url": "={{ $json.attachments[0].url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "discordBotApi",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        624,
        0
      ],
      "id": "8f4b9ded-7cce-4720-9cdd-5039f8093eba",
      "name": "HTTP Request2",
      "credentials": {
        "discordBotApi": {
          "id": "",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "resource": "document",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "text": "Is there any API Key in this document?",
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        832,
        0
      ],
      "id": "db30225b-5735-4a15-8125-e4ab80e203b0",
      "name": "Analyze document1",
      "credentials": {
        "googlePalmApi": {
          "id": "",
          "name": "Google Gemini(PaLM) Api account 4"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "bjyotibrat@gmail.com",
        "subject": "FOR TESTING",
        "message": "={{ $json.content.parts[0].text }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1088,
        0
      ],
      "id": "2641027a-ea9e-403e-9f67-296e02cbef5d",
      "name": "Send a message2",
      "webhookId": "acf1eb41-4876-4f3e-a14f-22eb22e3c8a6",
      "credentials": {
        "gmailOAuth2": {
          "id": "",
          "name": "Gmail account 3"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f91ea83e-09d6-43b5-afd3-4d7716749bd3",
              "name": "channelId",
              "value": "",
              "type": "string"
            },
            {
              "id": "55c72e30-ba6e-456c-b9a4-a4837d65d48e",
              "name": "maxMessages",
              "value": "50",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -16,
        880
      ],
      "id": "37048ee1-9fc2-4ade-a64a-80bc54a7c4d0",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "url": "=https://slack.com/api/conversations.history?channel={{ $json.channelId }}&limit={{ $json.maxMessages }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "slackApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer "
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        192,
        880
      ],
      "id": "d54cf99c-0b8c-4a88-a382-bf2021cfae07",
      "name": "HTTP Request3",
      "credentials": {
        "slackApi": {
          "id": "",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const messages = $input.all()[0].json.messages;\nconst mostRecentMessage = messages[0];\n\nif (mostRecentMessage.files) {\n  return { attachment: mostRecentMessage.files };\n} else {\n  return {};\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        400,
        880
      ],
      "id": "721d9f98-477e-4003-9739-88828a46a486",
      "name": "Code in JavaScript5"
    },
    {
      "parameters": {
        "url": "={{ $json.attachment[0].url_private_download }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "slackApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer "
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        608,
        880
      ],
      "id": "83182679-0e7f-40f7-b59e-24c8cc046219",
      "name": "HTTP Request4",
      "credentials": {
        "slackApi": {
          "id": "",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent?key=AIzaSyCppadu4Z_UgZ2ru1aY48nSBZt05_hMOBs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googlePalmApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ \n  {\n    contents: [\n      {\n        role: \"user\",\n        parts: [\n          {\n            text: `Task: Inspect the following file text for leaked API keys/secrets. If any are found, return ONLY a strict JSON array of objects [{\\\"path\\\",\\\"match_type\\\",\\\"match_value\\\",\\\"confidence\\\"}]. If none, return []. Do not include any prose. Text:\\n\\n$json.data`\n          }\n        ]\n      }\n    ],\n    generationConfig: {\n      temperature: 0,\n      maxOutputTokens: 512\n    }\n  }\n}}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        832,
        880
      ],
      "id": "e6da0837-bea3-4aae-a216-5db9f97bfdfd",
      "name": "HTTP Request5",
      "credentials": {
        "googlePalmApi": {
          "id": "",
          "name": "Google Gemini(PaLM) Api account 4"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// items look like: { path, match_type, match_value, confidence }\nconst rows = items.map(i => i.json);\nconst total = rows.length;\n\nconst lines = rows.map((r, i) => {\n  const masked = typeof r.match_value === \"string\" && r.match_value.length > 10\n    ? `${r.match_value.slice(0,4)}••••${r.match_value.slice(-4)}`\n    : String(r.match_value);\n  return `• ${i+1}. ${r.path}: ${r.match_type} = ${masked} (conf=${r.confidence || \"n/a\"})`;\n}).join('\\n');\n\nconst body = `Secrets scan results\\n\\nTotal findings: ${total}\\n\\n${lines}`;\n\nreturn [{ json: { totalFindings: total, body } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1104,
        880
      ],
      "id": "65c82f55-43bf-49f7-9b5b-9bb9fb42d330",
      "name": "Code in JavaScript6"
    },
    {
      "parameters": {
        "sendTo": "bjyotibrat@gmail.com",
        "subject": "=FOR TESTING GitHub secrets scan ({{ $json.totalFindings }})",
        "emailType": "text",
        "message": "={{ $json.body }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1376,
        880
      ],
      "id": "592c6b21-9894-400c-9314-75e10007f7c5",
      "name": "Send a message3",
      "webhookId": "a0f22071-cfbd-4137-9aaf-ae268dafc488",
      "credentials": {
        "gmailOAuth2": {
          "id": "",
          "name": "Gmail account 3"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          },
          {
            "node": "GitHub Credentials 1",
            "type": "main",
            "index": 0
          },
          {
            "node": "GitHub Credentials ",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Analyze document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze document": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "GitHub Credentials 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Credentials 1": {
      "main": [
        [
          {
            "node": "GitHub API Call 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Credentials 2": {
      "main": [
        [
          {
            "node": "GitHub API Call 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub API Call 1": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub API Call 2": {
      "main": [
        [
          {
            "node": "Code in JavaScript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code in JavaScript3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript3": {
      "main": [
        [
          {
            "node": "Code in JavaScript2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript2": {
      "main": [
        [
          {
            "node": "Send a message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Credentials ": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Code in JavaScript4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript4": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Analyze document1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze document1": {
      "main": [
        [
          {
            "node": "Send a message2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Code in JavaScript5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript5": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request5": {
      "main": [
        [
          {
            "node": "Code in JavaScript6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript6": {
      "main": [
        [
          {
            "node": "Send a message3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "",
  "meta": {
    "instanceId": "5273cbb886bf63bf8ba29001a0919c8ecdc0a7ec7c25cb633ea456a3d9ae9fe9"
  },
  "tags": []
}