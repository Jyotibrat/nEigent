{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -384,
        32
      ],
      "id": "19102ea9-4385-449f-bdf3-f310d81d7964",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain",
              "drawingsToFormat": "application/pdf",
              "slidesToFormat": "application/pdf"
            }
          }
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -64,
        -128
      ],
      "id": "22c5a477-8aaa-4243-a0fe-ccfcb13b7d9e",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "document",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "text": "Is there any API Key in this document?",
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        160,
        -128
      ],
      "id": "27b532ab-6af8-442c-a982-9e769a64c248",
      "name": "Analyze document",
      "credentials": {
        "googlePalmApi": {
          "id": "",
          "name": "Google Gemini(PaLM) Api account 3"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "bjyotibrat@gmail.com",
        "subject": "FOR TESTING",
        "message": "={{ $json.content.parts[0].text }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        384,
        -128
      ],
      "id": "90969c82-0b3d-40e7-9c59-37fba692e8a4",
      "name": "Send a message",
      "webhookId": "acf1eb41-4876-4f3e-a14f-22eb22e3c8a6",
      "credentials": {
        "gmailOAuth2": {
          "id": "",
          "name": "Gmail account 3"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const allow = /\\.(txt|md|js|ts|py|java|go|rb|json|yaml|yml|tf|sh|env|ini|cfg|properties|ipynb)$/i;\nconst maxBytes = 1_000_000;\nconst out = [];\n($json.tree || []).forEach(n => {\n  if (n.type === 'blob' && allow.test(n.path) && (n.size ?? 0) <= maxBytes) {\n    out.push({ json: { owner: $json.owner, repo: $json.repo, branch: $json.branch, path: n.path } });\n  }\n});\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        384,
        160
      ],
      "id": "e50165fa-3078-42d5-8519-0bf522007507",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"owner\": \"Jyotibrat\",\n  \"repo\": \"For-Testing\",\n  \"branch\": \"main\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -64,
        160
      ],
      "id": "54bf198e-bfac-4108-ab5c-d04328b0d813",
      "name": "GitHub Credentials 1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e583b709-0163-4573-ad1d-3be494ec256c",
              "name": "owner",
              "value": "Jyotibrat",
              "type": "string"
            },
            {
              "id": "051f857a-32d2-4d47-b871-6b7be6638893",
              "name": "repo",
              "value": "For-Testing",
              "type": "string"
            },
            {
              "id": "654244f1-32a4-48f3-9a27-1ddfa85110e7",
              "name": "branch",
              "value": "main",
              "type": "string"
            },
            {
              "id": "b0b34a02-41a6-4253-91f8-1b66d2d3b428",
              "name": "path",
              "value": "={{ $json.path }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        592,
        160
      ],
      "id": "1dcc8e9a-62c2-43e2-9d1c-dc9ebac3ab39",
      "name": "GitHub Credentials 2"
    },
    {
      "parameters": {
        "url": "=https://api.github.com/repos/{{$json.owner}}/{{$json.repo}}/git/trees/{{$json.branch}}?recursive=1\n",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer "
            },
            {
              "name": "Accept",
              "value": "application/vnd.github+json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        160,
        160
      ],
      "id": "3cbe53a8-5974-430d-9150-6e51b0b41ee0",
      "name": "GitHub API Call 1",
      "credentials": {
        "githubApi": {
          "id": "",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.github.com/repos/{{ $json.owner }}/{{ $json.repo }}/contents/{{ $json.path }}?ref={{ $json.branch }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer "
            },
            {
              "name": "Accept",
              "value": "application/vnd.github+json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        784,
        160
      ],
      "id": "c664fbb8-dde8-40ae-9d00-6d09630a43a0",
      "name": "GitHub API Call 2"
    },
    {
      "parameters": {
        "jsCode": "const b64 = $json.content || \"\";\nconst buf = Buffer.from(b64, \"base64\");\nconst text = buf.toString(\"utf8\");\n// Skip clearly binary files\nif (/[\\u0000-\\u0008\\u000B\\u000C\\u000E-\\u001F]/.test(text)) {\n  return [{ json: { path: $json.path, textContent: \"\", skipped: true } }];\n}\nreturn [{ json: { path: $json.path, textContent: text } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        976,
        160
      ],
      "id": "e89eb750-ea16-4f79-a208-91b5a6252c4a",
      "name": "Code in JavaScript1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent?key=AIzaSyCppadu4Z_UgZ2ru1aY48nSBZt05_hMOBs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googlePalmApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ \n  {\n    contents: [\n      {\n        role: \"user\",\n        parts: [\n          {\n            text: `Task: Inspect the following file text for leaked API keys/secrets. If any are found, return ONLY a strict JSON array of objects [{\\\"path\\\",\\\"match_type\\\",\\\"match_value\\\",\\\"confidence\\\"}]. If none, return []. Do not include any prose. File path: ${$json.path}. Text:\\n\\n${$json.textContent}`\n          }\n        ]\n      }\n    ],\n    generationConfig: {\n      temperature: 0,\n      maxOutputTokens: 512\n    }\n  }\n}}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1184,
        160
      ],
      "id": "7b8763ba-bebe-4a27-a318-87acd9e19d23",
      "name": "HTTP Request",
      "credentials": {
        "googlePalmApi": {
          "id": "",
          "name": "Google Gemini(PaLM) Api account 4"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// If HTTP node returns an array at root, unwrap it\nconst root = Array.isArray($json) ? $json[0] : $json;\n\n// Extract model text\nlet txt = root?.candidates?.[0]?.content?.parts?.[0]?.text ?? \"\";\n\n// Remove Markdown code fences if present (``` or ```json ... ```)\ntxt = txt.replace(/^```(?:json)?\\s*/i, \"\").replace(/```$/i, \"\");\n\n// Now parse JSON safely\nlet arr = [];\ntry {\n  arr = JSON.parse(txt);\n} catch (e) {\n  arr = [];\n}\n\n// Emit items\nreturn arr.map(d => ({ json: d }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1392,
        160
      ],
      "id": "cf6ba1dc-0c12-4e04-bbc2-b0b2b684a29b",
      "name": "Code in JavaScript3"
    },
    {
      "parameters": {
        "jsCode": "// items look like: { path, match_type, match_value, confidence }\nconst rows = items.map(i => i.json);\nconst total = rows.length;\n\nconst lines = rows.map((r, i) => {\n  const masked = typeof r.match_value === \"string\" && r.match_value.length > 10\n    ? `${r.match_value.slice(0,4)}••••${r.match_value.slice(-4)}`\n    : String(r.match_value);\n  return `• ${i+1}. ${r.path}: ${r.match_type} = ${masked} (conf=${r.confidence || \"n/a\"})`;\n}).join('\\n');\n\nconst body = `Secrets scan results\\n\\nTotal findings: ${total}\\n\\n${lines}`;\n\nreturn [{ json: { totalFindings: total, body } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1600,
        160
      ],
      "id": "9a3e7021-c612-4f44-b833-dedb881e1fb4",
      "name": "Code in JavaScript2"
    },
    {
      "parameters": {
        "sendTo": "bjyotibrat@gmail.com",
        "subject": "=FOR TESTING GitHub secrets scan ({{ $json.totalFindings }})",
        "emailType": "text",
        "message": "={{ $json.body }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1808,
        160
      ],
      "id": "d64b969e-153b-42ca-a054-ae2cb42bfc31",
      "name": "Send a message1",
      "webhookId": "a0f22071-cfbd-4137-9aaf-ae268dafc488",
      "credentials": {
        "gmailOAuth2": {
          "id": "",
          "name": "Gmail account 3"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          },
          {
            "node": "GitHub Credentials 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Analyze document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze document": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "GitHub Credentials 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Credentials 1": {
      "main": [
        [
          {
            "node": "GitHub API Call 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Credentials 2": {
      "main": [
        [
          {
            "node": "GitHub API Call 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub API Call 1": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub API Call 2": {
      "main": [
        [
          {
            "node": "Code in JavaScript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code in JavaScript3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript3": {
      "main": [
        [
          {
            "node": "Code in JavaScript2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript2": {
      "main": [
        [
          {
            "node": "Send a message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "54a09994-00a9-4257-a1d7-645a94e92275",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5273cbb886bf63bf8ba29001a0919c8ecdc0a7ec7c25cb633ea456a3d9ae9fe9"
  },
  "id": "yTUz8sWNelN6FJ5g",
  "tags": []
}